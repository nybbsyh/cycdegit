<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper的命名空间 必须和某一个DAO的接口文件路径一致（包名.接口）-->
<mapper namespace="cn.App.dao.version.VersionMapper">
    <insert id="addVersion">
        INSERT into app_version(downloadLink,apkFileName,appId,versionNo,versionSize,publishStatus,versionInfo,apkLocPath,createdBy,creationDate)
        VALUES(#{downloadLink},#{apkFileName},#{appId},#{versionNo},#{versionSize},#{publishStatus},#{versionInfo},#{apkLocPath},#{createdBy},#{creationDate})
    </insert>
    <update id="updateBanBen">
        update app_version <set>
        <if test="versionNo!=null and versionNo!=''">versionNo=#{versionNo},</if>
        <if test="versionSize!=null and versionSize!=''">versionSize=#{versionSize},</if>
        <if test="publishStatus!=null and publishStatus!=''">publishStatus=#{publishStatus},</if>
        <if test="versionInfo!=null">versionInfo=#{versionInfo},</if>
        <if test="apkLocPath!=null ">apkLocPath=#{apkLocPath},</if>
        <if test="downloadLink!=null ">downloadLink=#{downloadLink},</if>
        <if test="modifyBy!=null">modifyBy=#{modifyBy},</if>
        <if test="modifyDate!=null">modifyDate=#{modifyDate},</if>
        <if test="apkFileName!=null">apkFileName=#{apkFileName},</if>
    </set>
        where id=#{id}
    </update>
    <update id="UpdateApk">
        UPDATE  app_version SET downloadLink="",apkLocPath="",apkFileName="" WHERE id=#{id}
    </update>
    <delete id="Deleat">
        delete from app_info where id=#{id}
    </delete>
    <delete id="DeleteVersion">
        delete from app_version where appId=#{appId}
    </delete>
    <select id="findmassion" resultType="cn.App.entity.version">
        SELECT p.modifyDate,p.downloadLink,a.softwareName as appName ,versionNo ,versionSize,d.valueName as publishStatusName,downloadLink ,apkFileName,modifyDate
        FROM  app_version p LEFT JOIN (SELECT id,softwareName from app_info) as a ON
            a.id=p.appId left JOIN (SELECT valueId,valueName
            FROM data_dictionary WHERE typeCode='PUBLISH_STATUS') as d ON p.publishStatus=d.valueId
        WHERE a.id = #{id}
    </select>
    <select id="findVersion" resultType="cn.App.entity.version">
        SELECT p.modifyDate,p.downloadLink,a.softwareName as appName ,versionNo ,versionSize,d.valueName as publishStatusName,downloadLink ,apkFileName,modifyDate
        FROM  app_version p LEFT JOIN (SELECT id,softwareName from app_info) as a ON
            a.id=p.appId left JOIN (SELECT valueId,valueName
                                    FROM data_dictionary WHERE typeCode='PUBLISH_STATUS') as d ON p.publishStatus=d.valueId
        WHERE a.id = #{id}
    </select>
    <select id="findbanben" resultType="cn.App.entity.version">
        SELECT p.versionInfo,p.id,a.softwareName,versionNo ,versionSize,d.valueName,downloadLink,apkFileName,modifyDate,apkLocPath
        FROM  app_version p LEFT JOIN (SELECT id,softwareName from app_info) as a ON a.id=p.appId left JOIN (SELECT valueId,valueName FROM data_dictionary WHERE typeCode='PUBLISH_STATUS') as d ON p.publishStatus=d.valueId
        WHERE p.appId = #{aid} AND p.id = #{vid}
    </select>
</mapper>